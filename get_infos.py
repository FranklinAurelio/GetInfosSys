import datetime
import platform
import socket
import psutil

file = open("infos.txt", "a")
infos = list()
date = datetime.datetime.now()
infos.append('dateTime: '+str(date)+'\n')
#infos.append(date)
#infos.append("\n")
localSystem = platform.system()
infos.append('System: '+str(localSystem)+'\n')
localPlataform = platform.platform()
infos.append('Plataform: '+str(localPlataform)+'\n')
localArchtecture = platform.architecture()
infos.append('Architecture: '+str(localArchtecture)+'\n')
locaJavaVersion = platform.java_ver()
infos.append('Java_version: '+str(locaJavaVersion)+'\n')
localLibcVersion = platform.libc_ver()
infos.append('Libc_Version: '+str(localLibcVersion)+'\n')
localMacVersion = platform.mac_ver()
infos.append('Mac_Version: '+str(localMacVersion)+'\n')
localMachine = platform.machine()
infos.append('Machine: '+str(localMachine)+'\n')
localNodeVersion = platform.node()
infos.append('Node: '+str(localNodeVersion)+'\n')
localProcessor = platform.processor()
infos.append('Processor: '+str(localProcessor)+'\n')
localRelease = platform.release()
infos.append('Release: '+str(localRelease)+'\n')
localUname = platform.uname()
infos.append('Uname: '+str(localUname)+'\n')
localSystemVersion = platform.version()
infos.append(' Sys Version: '+str(localSystemVersion)+'\n')
localwin32Edition = platform.win32_edition()
infos.append('Win32 Edition: '+str(localwin32Edition)+'\n')
localWin32Version = platform.win32_ver()
infos.append('Win32 Version: '+str(localWin32Version)+'\n')
localHostName = socket.gethostname()
infos.append('Hostname: '+str(localHostName)+'\n')
localRam = str(round(psutil.virtual_memory().total / (1024.0 **3)))
infos.append('Ram: '+str(localRam)+'\n')
file.writelines(infos)